name: CI
on:
- push
- pull_request
- workflow_dispatch
jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.determine-version.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Determine version
      id: determine-version
      run: |
        readonly GIT_DESCRIBE=$(git describe --always --tags --dirty)
        echo "::set-output name=version::${GIT_DESCRIBE#v}"
  build:
    runs-on: ubuntu-latest
    needs: version
    strategy:
      matrix:
        toolchain:
        - linux_amd64
        - linux_arm
        - linux_arm64
        - windows_amd64
        - darwin_amd64
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build
      run: |
        bazelisk build --config=ci --platforms @io_bazel_rules_go//go/toolchain:${{ matrix.toolchain }} //:plexbackup
        echo "binary=$(bazelisk run --config=ci --run_under 'echo ' //:plexbackup)" >> $GITHUB_ENV
    - name: Package
      run: |
        artifact_dir=plexbackup-${{ needs.version.outputs.version }}-${{ matrix.toolchain }}
        mkdir $artifact_dir
        mv $binary $artifact_dir/
        if [[ ${{ matrix.toolchain }} =~ ^windows_.* ]]; then
            artifact=${artifact_dir}.zip
            zip $artifact -r $artifact_dir
        else
            artifact=${artifact_dir}.tar.gz
            tar -czf $artifact $artifact_dir
        fi
        echo "artifact=${artifact}" >> $GITHUB_ENV
    - name: Upload binary artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.artifact }}
        path: ${{ env.artifact }}
  release:
    runs-on: ubuntu-latest
    needs: [version, build]  # not transitive
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts/
    - name: Build assets directory
      run: |
        mkdir assets/
        mv artifacts/*/* assets/
    - name: Calculate checksums
      run: sha256sum * > sha256sums.txt
      working-directory: assets
    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      uses: softprops/action-gh-release@v1
      with:
        files: |
          assets/*
